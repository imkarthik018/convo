{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE ? `${process.env.REACT_APP_API_BASE}api/chats` : 'http://localhost:8083/api/chats';\n\n// Configure axios to handle errors globally\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\n// Helper function to handle errors\nconst handleError = error => {\n  if (error.response) {\n    // Server responded with error\n    console.error('API Error:', error.response.data);\n    throw new Error(error.response.data.message || 'An error occurred');\n  } else if (error.request) {\n    // Request made but no response\n    console.error('Network Error:', error.request);\n    throw new Error('Unable to connect to the server. Please ensure the backend is running.');\n  } else {\n    // Something else happened\n    console.error('Error:', error.message);\n    throw error;\n  }\n};\nexport const addConversation = async conversation => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/addConversation`, conversation);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const getAllConversations = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/allConversations`);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const getConversationsByCategory = async category => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/byCategory?category=${category}`);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const getConversationsSortedByTime = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/sortedByTime`);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const deleteConversation = async id => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/deleteConversation/${id}`);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const updateConversation = async (id, conversation) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/updateConversation/${id}`, conversation);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE","defaults","headers","common","handleError","error","response","console","data","Error","message","request","addConversation","conversation","post","getAllConversations","get","getConversationsByCategory","category","getConversationsSortedByTime","deleteConversation","id","delete","updateConversation","put"],"sources":["C:/Users/vjkar/OneDrive/Desktop/convo/reactapp/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE ? `${process.env.REACT_APP_API_BASE}api/chats` : 'http://localhost:8083/api/chats';\n\n// Configure axios to handle errors globally\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\n// Helper function to handle errors\nconst handleError = (error) => {\n  if (error.response) {\n    // Server responded with error\n    console.error('API Error:', error.response.data);\n    throw new Error(error.response.data.message || 'An error occurred');\n  } else if (error.request) {\n    // Request made but no response\n    console.error('Network Error:', error.request);\n    throw new Error('Unable to connect to the server. Please ensure the backend is running.');\n  } else {\n    // Something else happened\n    console.error('Error:', error.message);\n    throw error;\n  }\n};\n\nexport const addConversation = async (conversation) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/addConversation`, conversation);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const getAllConversations = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/allConversations`);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const getConversationsByCategory = async (category) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/byCategory?category=${category}`);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const getConversationsSortedByTime = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/sortedByTime`);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const deleteConversation = async (id) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/deleteConversation/${id}`);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const updateConversation = async (id, conversation) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/updateConversation/${id}`, conversation);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}