{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8083/api/auth';\n\n// Configure axios default headers\naxios.defaults.headers.common['Content-Type'] = 'application/json';\nexport const login = async (username, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login`, {\n      username,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Login error:', error);\n    if (error.response) {\n      throw new Error(error.response.data);\n    } else {\n      throw new Error('Network error: Unable to connect to server');\n    }\n  }\n};\nexport const signup = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/signup`, {\n      username: userData.username,\n      password: userData.password,\n      email: userData.email,\n      role: userData.role || 'ROLE_USER'\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Signup error:', error);\n    if (error.response) {\n      throw new Error(error.response.data);\n    } else {\n      throw new Error('Network error: Unable to connect to server');\n    }\n  }\n};\nexport const getStoredUser = () => {\n  try {\n    const userStr = localStorage.getItem('user');\n    if (userStr) {\n      return JSON.parse(userStr);\n    }\n  } catch (error) {\n    console.error('Error reading user from localStorage:', error);\n  }\n  return null;\n};\nexport const getStoredToken = () => {\n  return localStorage.getItem('token');\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};\nexport const getUserRole = () => {\n  const user = getStoredUser();\n  return user ? user.role : null;\n};","map":{"version":3,"names":["axios","API_BASE_URL","defaults","headers","common","login","username","password","response","post","data","error","console","Error","signup","userData","email","role","getStoredUser","userStr","localStorage","getItem","JSON","parse","getStoredToken","logout","removeItem","isAuthenticated","getUserRole","user"],"sources":["C:/Users/vjkar/OneDrive/Desktop/convo/reactapp/src/services/auth.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8083/api/auth';\r\n\r\n// Configure axios default headers\r\naxios.defaults.headers.common['Content-Type'] = 'application/json';\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/login`, {\r\n      username,\r\n      password\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    if (error.response) {\r\n      throw new Error(error.response.data);\r\n    } else {\r\n      throw new Error('Network error: Unable to connect to server');\r\n    }\r\n  }\r\n};\r\n\r\nexport const signup = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/signup`, {\r\n      username: userData.username,\r\n      password: userData.password,\r\n      email: userData.email,\r\n      role: userData.role || 'ROLE_USER'\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Signup error:', error);\r\n    if (error.response) {\r\n      throw new Error(error.response.data);\r\n    } else {\r\n      throw new Error('Network error: Unable to connect to server');\r\n    }\r\n  }\r\n};\r\n\r\nexport const getStoredUser = () => {\r\n  try {\r\n    const userStr = localStorage.getItem('user');\r\n    if (userStr) {\r\n      return JSON.parse(userStr);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error reading user from localStorage:', error);\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getStoredToken = () => {\r\n  return localStorage.getItem('token');\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  return !!localStorage.getItem('token');\r\n};\r\n\r\nexport const getUserRole = () => {\r\n  const user = getStoredUser();\r\n  return user ? user.role : null;\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,gCAAgC;;AAErD;AACAD,KAAK,CAACE,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;AAElE,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,QAAQ,EAAE;MACzDK,QAAQ;MACRC;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClB,MAAM,IAAIK,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IACtC,CAAC,MAAM;MACL,MAAM,IAAIG,KAAK,CAAC,4CAA4C,CAAC;IAC/D;EACF;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAOC,QAAQ,IAAK;EACxC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,SAAS,EAAE;MAC1DK,QAAQ,EAAES,QAAQ,CAACT,QAAQ;MAC3BC,QAAQ,EAAEQ,QAAQ,CAACR,QAAQ;MAC3BS,KAAK,EAAED,QAAQ,CAACC,KAAK;MACrBC,IAAI,EAAEF,QAAQ,CAACE,IAAI,IAAI;IACzB,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClB,MAAM,IAAIK,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IACtC,CAAC,MAAM;MACL,MAAM,IAAIG,KAAK,CAAC,4CAA4C,CAAC;IAC/D;EACF;AACF,CAAC;AAED,OAAO,MAAMK,aAAa,GAAGA,CAAA,KAAM;EACjC,IAAI;IACF,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAIF,OAAO,EAAE;MACX,OAAOG,IAAI,CAACC,KAAK,CAACJ,OAAO,CAAC;IAC5B;EACF,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;EAC/D;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMa,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAOJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC,CAAC;AAED,OAAO,MAAMI,MAAM,GAAGA,CAAA,KAAM;EAC1BL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;EAChCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,CAAC,CAACP,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC;AAED,OAAO,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMC,IAAI,GAAGX,aAAa,CAAC,CAAC;EAC5B,OAAOW,IAAI,GAAGA,IAAI,CAACZ,IAAI,GAAG,IAAI;AAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}